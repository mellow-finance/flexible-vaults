// SPDX-License-Identifier: BUSL-1.1
pragma solidity 0.8.25;

library PermissionsLibrary {
    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;

    bytes32 public constant SET_CUSTOM_HOOK_ROLE = keccak256("SHARE_MODULE:SET_CUSTOM_HOOK_ROLE");
    bytes32 public constant CREATE_DEPOSIT_QUEUE_ROLE = keccak256("SHARE_MODULE:CREATE_DEPOSIT_QUEUE_ROLE");
    bytes32 public constant CREATE_REDEEM_QUEUE_ROLE = keccak256("SHARE_MODULE.CREATE_REDEEM_QUEUE_ROLE");

    bytes32 public constant SUBMIT_REPORT_ROLE = keccak256("ORACLE:SUBMIT_REPORT_ROLE");
    bytes32 public constant ACCEPT_REPORT_ROLE = keccak256("ORACLE:ACCEPT_REPORT_ROLE");
    bytes32 public constant SET_SECURITY_PARAMS_ROLE = keccak256("ORACLE:SET_SECURITY_PARAMS_ROLE");
    bytes32 public constant ADD_SUPPORTED_ASSETS_ROLE = keccak256("ORACLE:ADD_SUPPORTED_ASSETS_ROLE");
    bytes32 public constant REMOVE_SUPPORTED_ASSETS_ROLE = keccak256("ORACLE:REMOVE_SUPPORTED_ASSETS_ROLE");

    bytes32 public constant SET_MERKLE_ROOT_ROLE = keccak256("VERIFIER:SET_MERKLE_ROOT_ROLE");
    bytes32 public constant SET_SECONDARY_ACL_ROLE = keccak256("VERIFIER:SET_SECONDARY_ACL_ROLE");
    bytes32 public constant CALL_ROLE = keccak256("VERIFIER:CALL_ROLE");
    bytes32 public constant ADD_ALLOWED_CALLS_ROLE = keccak256("VERIFIER:ADD_ALLOWED_CALLS_ROLE");
    bytes32 public constant REMOVE_ALLOWED_CALLS_ROLE = keccak256("VERIFIER:REMOVE_ALLOWED_CALLS_ROLE");

    bytes32 public constant SET_FLAGS_ROLE = keccak256("SHARE_MANAGER:SET_FLAGS_ROLE");
    bytes32 public constant SET_ACCOUNT_INFO_ROLE = keccak256("SHARE_MANAGER:SET_ACCOUNT_INFO_ROLE");

    bytes32 public constant CREATE_SUBVAULT_ROLE = keccak256("VAULT_MODULE:CREATE_SUBVAULT_ROLE");
    bytes32 public constant DISCONNECT_SUBVAULT_ROLE = keccak256("VAULT_MODULE:DISCONNECT_SUBVAULT_ROLE");
    bytes32 public constant RECONNECT_SUBVAULT_ROLE = keccak256("VAULT_MODULE:RECONNECT_SUBVAULT_ROLE");
    bytes32 public constant PULL_LIQUIDITY_ROLE = keccak256("VAULT_MODULE:PULL_LIQUIDITY_ROLE");
    bytes32 public constant PUSH_LIQUIDITY_ROLE = keccak256("VAULT_MODULE:PUSH_LIQUIDITY_ROLE");

    bytes32 public constant SET_VAULT_LIMIT_ROLE = keccak256("RISK_MANAGER:SET_VAULT_LIMIT_ROLE");
    bytes32 public constant SET_SUBVAULT_LIMIT_ROLE = keccak256("RISK_MANAGER:SET_SUBVAULT_LIMIT_ROLE");
    bytes32 public constant ADD_SUBVAULT_ALLOWED_ASSETS_ROLE =
        keccak256("RISK_MANAGER:ADD_SUBVAULT_ALLOWED_ASSETS_ROLE");
    bytes32 public constant REMOVE_SUBVAULT_ALLOWED_ASSETS_ROLE =
        keccak256("RISK_MANAGER:REMOVE_SUBVAULT_ALLOWED_ASSETS_ROLE");
    bytes32 public constant MODIFY_PENDING_ASSETS_ROLE = keccak256("RISK_MANAGER:MODIFY_PENDING_ASSETS_ROLE");
    bytes32 public constant MODIFY_VAULT_BALANCE_ROLE = keccak256("RISK_MANAGER:MODIFY_VAULT_BALANCE_ROLE");
    bytes32 public constant MODIFY_SUBVAULT_BALANCE_ROLE = keccak256("RISK_MANAGER:MODIFY_SUBVAULT_BALANCE_ROLE");
}
